export const pagesRoutes = [
  ["v-8daa1a0e","/",{"y":"h","title":"个人主页","i":"home"},["/index.html","/README.md"]],
  ["v-2e3eac9e","/slides.html",{"d":"2023-01-26T06:20:30.000Z","e":"<!-- markdownlint-disable MD024 MD033 MD051 -->\n","y":"s","title":"幻灯片页","i":"slides"},["/slides","/slides.md"]],
  ["v-145ac574","/blog/",{"y":"h","title":""},["/blog/index.html","/blog/README.md"]],
  ["v-6dc367c8","/projects/",{"y":"p","title":"项目目录页","i":"free"},["/projects/index.html","/projects/README.md"]],
  ["v-1486b3d8","/floatinglife/",{"y":"p","title":"杂记目录页","i":"note"},["/floatinglife/index.html","/floatinglife/README.md"]],
  ["v-7208bd18","/codenotes/",{"y":"p","title":"笔记目录页","i":"code"},["/codenotes/index.html","/codenotes/README.md"]],
  ["v-4c083800","/quicknav/",{"d":"2023-01-26T06:20:30.000Z","c":["快速导航"],"g":["优质博客","搜索引擎"],"u":false,"e":"<h2> 搜索引擎</h2>\n<h2> 开源社区</h2>\n<h2> 优质博客</h2>\n<h2> 在线工具</h2>\n<h2> 在线教程</h2>\n<h2> 文档相关</h2>\n<h2> 其他导航</h2>\n","y":"a","title":"快速导航","i":"navigation"},["/quicknav/index.html","/quicknav/README.md"]],
  ["v-7fe15663","/resources/",{"y":"p","title":"资源目录页","i":"advance"},["/resources/index.html","/resources/README.md"]],
  ["v-77e62f35","/projects/pracprojects/",{"d":"2023-01-26T06:20:30.000Z","c":["实战项目"],"g":["实战项目"],"u":false,"y":"a","title":"实战项目【开源项目】","i":"workingDirectory"},["/projects/pracprojects/index.html","/projects/pracprojects/README.md"]],
  ["v-76444286","/projects/systemdesign/",{"d":"2023-01-26T06:20:30.000Z","c":["系统设计"],"g":["系统设计"],"u":false,"e":"<h2> 专业软件</h2>\n<ul>\n<li><a href=\"https://ruancang.net/\" target=\"_blank\" rel=\"noopener noreferrer\">RuanCang</a>：<strong>专业软件</strong>免费下载。</li>\n</ul>\n<blockquote>\n<p>官网：<a href=\"https://ruancang.net/\" target=\"_blank\" rel=\"noopener noreferrer\">https://ruancang.net/</a></p>\n</blockquote>\n","y":"a","title":"系统设计【开源项目】","i":"shell"},["/projects/systemdesign/index.html","/projects/systemdesign/README.md"]],
  ["v-39fb77e5","/projects/techguide/",{"d":"2023-01-26T06:20:30.000Z","c":["技术教程"],"g":["技术教程"],"u":false,"e":"<h2> CS</h2>\n<ul>\n<li><a href=\"https://github.com/CyC2018/CS-Notes\" target=\"_blank\" rel=\"noopener noreferrer\">CS-Notes</a>：技术面试<strong>必备基础知识</strong>、<code>Leetcode</code>、计算机操作系统、计算机网络、系统设计。</li>\n</ul>\n<blockquote>\n<p><code>Github</code>地址：<a href=\"https://github.com/CyC2018/CS-Notes\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/CyC2018/CS-Notes</a></p>\n<p>官网：<a href=\"http://www.cyc2018.xyz/\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.cyc2018.xyz/</a></p>\n</blockquote>","y":"a","title":"技术教程【开源项目】","i":"guide"},["/projects/techguide/index.html","/projects/techguide/README.md"]],
  ["v-804672f0","/projects/toollibrary/",{"d":"2023-01-26T06:20:30.000Z","c":["工具类库"],"g":["工具类库"],"u":false,"e":"<h2> 组件库</h2>\n<ul>\n<li><a href=\"https://github.com/bestvist/vue-clock2/\" target=\"_blank\" rel=\"noopener noreferrer\">vue-clock2</a>：一款简单的<strong>图形时钟组件</strong>，可以自定义时间、颜色、边框、背景、大小。</li>\n</ul>\n<blockquote>\n<p>官网：<a href=\"https://github.com/bestvist/vue-clock2/\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub - bestvist/vue-clock2: vue clock component</a></p>\n<p>演示：<a href=\"https://bestvist.github.io/vue-clock2/docs/\" target=\"_blank\" rel=\"noopener noreferrer\">vue-clock2 | vue clock component (bestvist.github.io)</a></p>\n</blockquote>","y":"a","title":"工具类库【开源项目】","i":"module"},["/projects/toollibrary/index.html","/projects/toollibrary/README.md"]],
  ["v-8f955f74","/floatinglife/cooker/",{"y":"p","title":"小镇美食家的日常","i":"linter"},["/floatinglife/cooker/index.html","/floatinglife/cooker/README.md"]],
  ["v-a74c22fa","/floatinglife/iter/",{"y":"p","title":"小镇技术宅的日常","i":"computer"},["/floatinglife/iter/index.html","/floatinglife/iter/README.md"]],
  ["v-4185ad80","/floatinglife/iter/%E5%BC%95%E5%85%A5%E7%94%B5%E5%AD%90%E4%B9%A6.html",{"d":"2023-01-26T06:20:30.000Z","c":["电子书"],"g":["电子书"],"u":false,"e":"<h2> 引入电子书</h2>\n","y":"a","title":"引入电子书","i":"write"},["/floatinglife/iter/引入电子书.html","/floatinglife/iter/%E5%BC%95%E5%85%A5%E7%94%B5%E5%AD%90%E4%B9%A6","/floatinglife/iter/引入电子书.md","/floatinglife/iter/%E5%BC%95%E5%85%A5%E7%94%B5%E5%AD%90%E4%B9%A6.md"]],
  ["v-01d70f42","/floatinglife/sporter/",{"y":"p","title":"小镇运动狂的日常","i":"strong"},["/floatinglife/sporter/index.html","/floatinglife/sporter/README.md"]],
  ["v-8fe64df8","/floatinglife/thinker/",{"y":"p","title":"小镇思考者的日常","i":"style"},["/floatinglife/thinker/index.html","/floatinglife/thinker/README.md"]],
  ["v-37b21b1d","/codenotes/algdata/",{"y":"p","title":"算法和数据结构","i":"ability"},["/codenotes/algdata/index.html","/codenotes/algdata/README.md"]],
  ["v-5c24fdac","/codenotes/cookbook/",{"y":"p","title":"在线技术文档","i":"read"},["/codenotes/cookbook/index.html","/codenotes/cookbook/README.md"]],
  ["v-a16c41c0","/codenotes/database/",{"y":"p","title":"数据库","i":"mysql"},["/codenotes/database/index.html","/codenotes/database/README.md"]],
  ["v-6de835c6","/codenotes/database/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AC%94%E8%AE%B0.html",{"d":"2023-01-26T06:20:30.000Z","c":["SQL"],"g":["SQL"],"u":false,"e":"<h2> 数据库</h2>\n<blockquote>\n<p>by杰米Y</p>\n</blockquote>\n<h2> 一、数据库基础知识</h2>\n<h3> 1、数据库系统基本构成</h3>\n<ul>\n<li><strong>数据库</strong>：数据库(DataBase 简称 DB)就是<u>信息的集合</u>或者说<u>数据库是由数据库管理系统管理的数据的集合</u></li>\n<li><strong>数据库管理系统</strong>：数据库管理系统(Database Management System 简称 DBMS)是<u>一种操纵和管理数据库的大型软件，通常用于建立、使用和维护数据库</u></li>\n<li><strong>数据库系统</strong>：数据库系统(Data Base System，简称 DBS)通常<u>由软件、数据库和数据管理员(DBA)组成</u></li>\n<li><strong>数据库管理员</strong>：数据库管理员(Database Administrator，简称 DBA)<u>负责全面管理和控制数据库系统</u></li>\n</ul>","y":"a","title":"数据库笔记","i":"mysql"},["/codenotes/database/数据库笔记.html","/codenotes/database/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AC%94%E8%AE%B0","/codenotes/database/数据库笔记.md","/codenotes/database/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AC%94%E8%AE%B0.md"]],
  ["v-178a7816","/codenotes/devtool/",{"y":"p","title":"开发必备","i":"tool"},["/codenotes/devtool/index.html","/codenotes/devtool/README.md"]],
  ["v-7310a336","/codenotes/framework/",{"y":"p","title":"企业级框架","i":"frame"},["/codenotes/framework/index.html","/codenotes/framework/README.md"]],
  ["v-5fb2d9dd","/codenotes/gocore/go.html",{"d":"2023-01-26T06:20:30.000Z","c":["Go"],"g":["Go"],"u":false,"e":"<h2> Go入门</h2>\n<blockquote>\n<p><strong>这是我参与「第五届青训营 」伴学笔记创作活动的第 N 天</strong></p>\n</blockquote>\n<h2> 博客</h2>\n<p>mock测试：<a href=\"https://juejin.cn/post/7169895196824436750\" target=\"_blank\" rel=\"noopener noreferrer\">https://juejin.cn/post/7169895196824436750</a></p>\n<p>单个函数测试：<a href=\"https://blog.csdn.net/lanyang123456/article/details/112056027\" target=\"_blank\" rel=\"noopener noreferrer\">https://blog.csdn.net/lanyang123456/article/details/112056027</a></p>","y":"a","title":"go从入门到入坟","i":"write"},["/codenotes/gocore/go","/codenotes/gocore/go.md"]],
  ["v-33989c94","/codenotes/gocore/",{"y":"p","title":"笔记目录页","i":"code"},["/codenotes/gocore/index.html","/codenotes/gocore/README.md"]],
  ["v-2b78c687","/codenotes/javacore/Java8%E6%96%B0%E7%89%B9%E6%80%A7.html",{"d":"2023-01-26T06:20:30.000Z","c":["Java"],"g":["Java"],"u":false,"e":"<h2> Optional类</h2>\n<h3> 引入</h3>\n<p><code>NPE</code>问题就是在开发中经常碰到的<code>NullPointerException</code>，即空指针问题，<code>Optional</code>类就是用来优雅解决该问题的方案。</p>\n<p>比如大家可能都有这样的经历：调用一个方法得到了返回值却不能直接将返回值作为参数去调用别的方法。我们首先要判断这个返回值是否为<code>null</code>，只有在非空的前提下才能将其作为其他方法的参数。</p>\n<p>以用户类和地址类举例说明其用法：</p>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><pre class=\"language-java\"><code><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> userName<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> phoneNumber<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Address</span> address<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">//无参、部分参数、全参数构造器方法...</span>\n  <span class=\"token comment\">//setter、getter方法...</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","title":"Java8新特性","i":"write"},["/codenotes/javacore/Java8新特性.html","/codenotes/javacore/Java8%E6%96%B0%E7%89%B9%E6%80%A7","/codenotes/javacore/Java8新特性.md","/codenotes/javacore/Java8%E6%96%B0%E7%89%B9%E6%80%A7.md"]],
  ["v-8d1bb016","/codenotes/javacore/Java%E4%B8%AD%E7%9A%84SPI%E6%9C%BA%E5%88%B6.html",{"d":"2023-01-26T06:20:30.000Z","y":"a","title":""},["/codenotes/javacore/Java中的SPI机制.html","/codenotes/javacore/Java%E4%B8%AD%E7%9A%84SPI%E6%9C%BA%E5%88%B6","/codenotes/javacore/Java中的SPI机制.md","/codenotes/javacore/Java%E4%B8%AD%E7%9A%84SPI%E6%9C%BA%E5%88%B6.md"]],
  ["v-34cb6992","/codenotes/javacore/Java%E5%9F%BA%E7%A1%80-%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6.html",{"d":"2023-01-26T06:20:30.000Z","c":["Java"],"g":["Java"],"u":false,"y":"a","title":"Java反射机制","i":"write"},["/codenotes/javacore/Java基础-反射机制.html","/codenotes/javacore/Java%E5%9F%BA%E7%A1%80-%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6","/codenotes/javacore/Java基础-反射机制.md","/codenotes/javacore/Java%E5%9F%BA%E7%A1%80-%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6.md"]],
  ["v-b03ae20a","/codenotes/javacore/Java%E5%9F%BA%E7%A1%80-%E5%BC%82%E5%B8%B8%E6%9C%BA%E5%88%B6.html",{"d":"2023-01-26T06:20:30.000Z","c":["Java"],"g":["Java"],"u":false,"y":"a","title":"Java异常机制","i":"write"},["/codenotes/javacore/Java基础-异常机制.html","/codenotes/javacore/Java%E5%9F%BA%E7%A1%80-%E5%BC%82%E5%B8%B8%E6%9C%BA%E5%88%B6","/codenotes/javacore/Java基础-异常机制.md","/codenotes/javacore/Java%E5%9F%BA%E7%A1%80-%E5%BC%82%E5%B8%B8%E6%9C%BA%E5%88%B6.md"]],
  ["v-677cae9d","/codenotes/javacore/Java%E5%9F%BA%E7%A1%80-%E6%B3%9B%E5%9E%8B%E6%9C%BA%E5%88%B6.html",{"d":"2023-01-26T06:20:30.000Z","c":["Java"],"g":["Java"],"u":false,"e":"<h2> 前言</h2>\n<p>Java泛型这个特性是从JDK 1.5才开始加入的，因此为了兼容之前的版本，Java泛型的实现采取了“<strong>伪泛型</strong>”的策略，即Java在语法上支持泛型，但是在编译阶段会进行所谓的“<strong>类型擦除</strong>”（Type Erasure），将所有的泛型表示（尖括号中的内容）都替换为具体的类型（其对应的原生态类型），就像完全没有泛型一样。</p>\n<h2> 为什么会引入泛型</h2>\n<blockquote>\n<p>泛型的本质是为了参数化类型，也就是说在泛型使用过程中，操作的数据类型被指定为一个参数，这种参数类型可以用在类、接口和方法中，分别被称为泛型类、泛型接口、泛型方法。</p>\n</blockquote>","y":"a","title":"Java泛型机制","i":"write"},["/codenotes/javacore/Java基础-泛型机制.html","/codenotes/javacore/Java%E5%9F%BA%E7%A1%80-%E6%B3%9B%E5%9E%8B%E6%9C%BA%E5%88%B6","/codenotes/javacore/Java基础-泛型机制.md","/codenotes/javacore/Java%E5%9F%BA%E7%A1%80-%E6%B3%9B%E5%9E%8B%E6%9C%BA%E5%88%B6.md"]],
  ["v-a46fbe6c","/codenotes/javacore/Java%E5%9F%BA%E7%A1%80-%E6%B3%A8%E8%A7%A3%E6%9C%BA%E5%88%B6.html",{"d":"2023-01-26T06:20:30.000Z","c":["Java"],"g":["Java"],"u":false,"y":"a","title":"Java注解机制","i":"write"},["/codenotes/javacore/Java基础-注解机制.html","/codenotes/javacore/Java%E5%9F%BA%E7%A1%80-%E6%B3%A8%E8%A7%A3%E6%9C%BA%E5%88%B6","/codenotes/javacore/Java基础-注解机制.md","/codenotes/javacore/Java%E5%9F%BA%E7%A1%80-%E6%B3%A8%E8%A7%A3%E6%9C%BA%E5%88%B6.md"]],
  ["v-1ff7fd37","/codenotes/javacore/Java%E5%9F%BA%E7%A1%80-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1.html",{"d":"2023-01-26T06:20:30.000Z","c":["Java"],"g":["Java"],"u":false,"e":"<h2> 三大特性</h2>\n","y":"a","title":"面向对象","i":"write"},["/codenotes/javacore/Java基础-面向对象.html","/codenotes/javacore/Java%E5%9F%BA%E7%A1%80-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1","/codenotes/javacore/Java基础-面向对象.md","/codenotes/javacore/Java%E5%9F%BA%E7%A1%80-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1.md"]],
  ["v-056f4c7a","/codenotes/javacore/Java%E9%9B%86%E5%90%88-ArrayList.html",{"d":"2023-01-26T06:20:30.000Z","c":["Java"],"g":["Java"],"u":false,"e":"<h2> 概述</h2>\n<p><code>ArrayList</code>实现了<code>List</code>接口，是顺序容器，即元素存放的数据与放进去的顺序相同，允许放入<code>null</code>元素，底层通过<strong>数组实现</strong>。除该类未实现同步外，其余跟<code>Vector</code>大致相同。每个<code>ArrayList</code>都有一个容量<code>(capacity)</code>，表示底层数组的实际大小，容器内存储元素的个数不能多于当前容量。当向容器中添加元素时，如果容量不足，容器会自动增大底层数组的大小。前面已经提过，<code>Java</code>泛型只是编译器提供的语法糖，所以这里的数组是一个<code>Object</code>数组，以便能够容纳任何类型的对象。</p>","y":"a","title":"ArrayList","i":"write"},["/codenotes/javacore/Java集合-ArrayList.html","/codenotes/javacore/Java%E9%9B%86%E5%90%88-ArrayList","/codenotes/javacore/Java集合-ArrayList.md","/codenotes/javacore/Java%E9%9B%86%E5%90%88-ArrayList.md"]],
  ["v-5661c88e","/codenotes/javacore/Java%E9%9B%86%E5%90%88-%E7%B1%BB%E5%85%B3%E7%B3%BB%E5%9B%BE.html",{"d":"2023-01-26T06:20:30.000Z","c":["Java"],"g":["Java"],"u":false,"e":"<h2> 类关系图</h2>\n<h2> 简单介绍</h2>\n<ul>\n<li>容器就是可以容纳其他<code>Java</code>对象的对象。<code>Java Collections Framework(JCF)</code>为<code>Java</code>开发者提供了通用的容器，其始于<code>JDK 1.2</code>。</li>\n<li><code>Java</code>容器里只能放对象，对于基本类型(<code>int</code>, <code>long</code>, <code>float</code>, <code>double</code>等)，需要将其包装成对象类型后(<code>Integer</code>, <code>Long</code>, <code>Float</code>, <code>Double</code>等)才能放到容器里。很多时候拆包装和解包装能够自动完成。这虽然会导致额外的性能和空间开销，但简化了设计和编程。</li>\n<li>容器主要包括 <code>Collection</code> 和 <code>Map</code> 两种，<code>Collection</code> 存储着对象的集合，而 <code>Map</code> 存储着键值对（两个对象）的映射表。</li>\n</ul>","y":"a","title":"集合类关系图","i":"write"},["/codenotes/javacore/Java集合-类关系图.html","/codenotes/javacore/Java%E9%9B%86%E5%90%88-%E7%B1%BB%E5%85%B3%E7%B3%BB%E5%9B%BE","/codenotes/javacore/Java集合-类关系图.md","/codenotes/javacore/Java%E9%9B%86%E5%90%88-%E7%B1%BB%E5%85%B3%E7%B3%BB%E5%9B%BE.md"]],
  ["v-da753ecc","/codenotes/javacore/",{"y":"p","title":"Java核心","i":"java"},["/codenotes/javacore/index.html","/codenotes/javacore/README.md"]],
  ["v-965081bc","/codenotes/jvm/",{"y":"p","title":"Java虚拟机","i":"engine"},["/codenotes/jvm/index.html","/codenotes/jvm/README.md"]],
  ["v-64c61a30","/resources/books/",{"d":"2023-01-26T06:20:30.000Z","c":["书籍"],"g":["书籍"],"u":false,"e":"<table>\n<thead>\n<tr>\n<th>资源名称</th>\n<th>分享链接</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>《Labuladong的算法小抄》</code></td>\n<td><a href=\"https://www.aliyundrive.com/s/8ouAjxFVgUX\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.aliyundrive.com/s/8ouAjxFVgUX</a></td>\n</tr>\n<tr>\n<td><code>《小傅哥的IDEA插件开发手册》</code></td>\n<td><a href=\"https://www.aliyundrive.com/s/Pq7xVp9bXdR\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.aliyundrive.com/s/Pq7xVp9bXdR</a></td>\n</tr>\n<tr>\n<td><code>《疯狂Java讲义第四版》</code></td>\n<td><a href=\"https://www.aliyundrive.com/s/Yd2L8XtGWUa\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.aliyundrive.com/s/Yd2L8XtGWUa</a></td>\n</tr>\n<tr>\n<td><code>《Java核心技术-卷1-基础知识》</code></td>\n<td><a href=\"https://www.aliyundrive.com/s/EvpXjq55LXn\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.aliyundrive.com/s/EvpXjq55LXn</a></td>\n</tr>\n<tr>\n<td><code>《Java核心技术-卷2-高级特性》</code></td>\n<td><a href=\"https://www.aliyundrive.com/s/hT5RQDe6q1k\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.aliyundrive.com/s/hT5RQDe6q1k</a></td>\n</tr>\n<tr>\n<td><code>《Linux命令速查手册》</code></td>\n<td><a href=\"https://www.aliyundrive.com/s/ophXiMFVPrB\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.aliyundrive.com/s/ophXiMFVPrB</a></td>\n</tr>\n<tr>\n<td><code>《鸟哥的Linux私房菜-高清》</code></td>\n<td><a href=\"https://www.aliyundrive.com/s/bd9PeqCf82N\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.aliyundrive.com/s/bd9PeqCf82N</a></td>\n</tr>\n<tr>\n<td><code>《鸟哥的Linux私房菜-非高清》</code></td>\n<td><a href=\"https://www.aliyundrive.com/s/e9ag9zBwTCS\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.aliyundrive.com/s/e9ag9zBwTCS</a></td>\n</tr>\n<tr>\n<td><code>《数学建模算法与应用-第二版-司守奎》</code></td>\n<td><a href=\"https://www.aliyundrive.com/s/uDtSpLzFqz2\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.aliyundrive.com/s/uDtSpLzFqz2</a></td>\n</tr>\n<tr>\n<td><code>《统计学习方法-李航》</code></td>\n<td><a href=\"https://www.aliyundrive.com/s/Gae5A3tJaZn\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.aliyundrive.com/s/Gae5A3tJaZn</a></td>\n</tr>\n<tr>\n<td><code>《Matlab神经网络30个案例分析》</code></td>\n<td><a href=\"https://www.aliyundrive.com/s/EVibkTrcFex\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.aliyundrive.com/s/EVibkTrcFex</a></td>\n</tr>\n<tr>\n<td><code>《具有AI功能加持的终端工具warp使用总结》</code></td>\n<td><a href=\"https://www.aliyundrive.com/s/kXKqP4RqyUD\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.aliyundrive.com/s/kXKqP4RqyUD</a></td>\n</tr>\n</tbody>\n</table>","y":"a","title":"书籍资源","i":"animation"},["/resources/books/index.html","/resources/books/README.md"]],
  ["v-05b997d8","/resources/videos/",{"d":"2023-01-26T06:20:30.000Z","c":["影视","音乐"],"g":["影视","音乐"],"u":false,"y":"a","title":"影音资源","i":"play"},["/resources/videos/index.html","/resources/videos/README.md"]],
  ["v-75632350","/codenotes/algdata/LeetCode/HOT100.html",{"d":"2023-01-26T06:20:30.000Z","c":["算法"],"g":["算法"],"u":false,"e":"<h2> HOT100</h2>\n<blockquote>\n<p>刷题时的一点总结，有的题可能还有更多的解法，这里面是个人觉得好的或者目前会的🤣</p>\n</blockquote>\n<h2> EASY</h2>\n<h3> <a href=\"https://leetcode.cn/problems/two-sum/?favorite=2cktkvj\" target=\"_blank\" rel=\"noopener noreferrer\">1、两数之和</a></h3>\n<h4> 1、暴力</h4>\n<blockquote>\n<p><code>O(N^2)/O(1)</code></p>\n<p>直接<code>双重for循环</code>遍历数组寻找两个数和是否为<code>target</code>即可</p>\n</blockquote>","y":"a","title":"HOT100","i":"write"},["/codenotes/algdata/LeetCode/HOT100","/codenotes/algdata/LeetCode/HOT100.md"]],
  ["v-64a1663d","/codenotes/algdata/LeetCode/",{"y":"p","title":"LeetCode","i":"like"},["/codenotes/algdata/LeetCode/index.html","/codenotes/algdata/LeetCode/README.md"]],
  ["v-12036784","/codenotes/algdata/lbld/",{"y":"p","title":"算法小抄","i":"like"},["/codenotes/algdata/lbld/index.html","/codenotes/algdata/lbld/README.md"]],
  ["v-1665eced","/codenotes/algdata/lbld/%E7%AE%97%E6%B3%95%E5%B0%8F%E6%8A%84%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92.html",{"d":"2023-01-26T06:20:30.000Z","c":["算法","数据结构"],"g":["算法","数据结构"],"u":false,"y":"a","title":"动态规划","i":"write"},["/codenotes/algdata/lbld/算法小抄动态规划.html","/codenotes/algdata/lbld/%E7%AE%97%E6%B3%95%E5%B0%8F%E6%8A%84%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92","/codenotes/algdata/lbld/算法小抄动态规划.md","/codenotes/algdata/lbld/%E7%AE%97%E6%B3%95%E5%B0%8F%E6%8A%84%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92.md"]],
  ["v-538b55ec","/codenotes/algdata/lbld/%E7%AE%97%E6%B3%95%E5%B0%8F%E6%8A%84%E6%95%B0%E5%AD%A6%E8%BF%90%E7%AE%97.html",{"d":"2023-01-26T06:20:30.000Z","c":["算法","数据结构"],"g":["算法","数据结构"],"u":false,"e":"<h2> 常用的位操作</h2>\n<h3> Java中的位操作符</h3>\n<div class=\"hint-container warning\">\n<p class=\"hint-container-title\">注意</p>\n<ul>\n<li><code>Java</code>中位操作符的操作数只能是<strong>整型<code>（byte、short、int、long）</code>和字符型数据<code>（char）</code>。</strong></li>\n<li><code>Java</code>中位操作符<strong>一共有7个，其中4个是位逻辑运算符，3个是移位运算符。</strong></li>\n<li>使用按位操作符时要注意：相等<code>（==）</code>与不相等<code>（!=）</code>的优先级在按位操作符之上！这意味着，位运算符的<strong>优先级极小，所以使用位运算符时，最好加上括号。</strong></li>\n</ul>\n</div>","y":"a","title":"数学运算","i":"write"},["/codenotes/algdata/lbld/算法小抄数学运算.html","/codenotes/algdata/lbld/%E7%AE%97%E6%B3%95%E5%B0%8F%E6%8A%84%E6%95%B0%E5%AD%A6%E8%BF%90%E7%AE%97","/codenotes/algdata/lbld/算法小抄数学运算.md","/codenotes/algdata/lbld/%E7%AE%97%E6%B3%95%E5%B0%8F%E6%8A%84%E6%95%B0%E5%AD%A6%E8%BF%90%E7%AE%97.md"]],
  ["v-a8b428d4","/codenotes/algdata/lbld/%E7%AE%97%E6%B3%95%E5%B0%8F%E6%8A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.html",{"d":"2023-01-26T06:20:30.000Z","c":["算法","数据结构"],"g":["算法","数据结构"],"u":false,"e":"<h2> 手写LRU缓存淘汰算法</h2>\n<h3> LRU算法描述</h3>\n<h3> LRU算法设计</h3>\n<h3> 代码实现</h3>\n<h2> 手写LFU算法</h2>\n<h3> 算法描述</h3>\n<h3> 思路分析</h3>\n<h3> 代码框架</h3>\n<h3> LFU核心逻辑</h3>\n<h2> 二叉树搜索树操作集锦</h2>\n<h3> 判断BST的合法性</h3>\n<h3> 在BST中查找一个数是否存在</h3>\n<h3> 在BST中插入一个数</h3>\n<h3> 在BST中删除一个数</h3>\n<h2> 完全二叉树的节点数为什么难算</h2>\n<h3> 思路分析</h3>","y":"a","title":"数据结构","i":"write"},["/codenotes/algdata/lbld/算法小抄数据结构.html","/codenotes/algdata/lbld/%E7%AE%97%E6%B3%95%E5%B0%8F%E6%8A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84","/codenotes/algdata/lbld/算法小抄数据结构.md","/codenotes/algdata/lbld/%E7%AE%97%E6%B3%95%E5%B0%8F%E6%8A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.md"]],
  ["v-78e9b099","/codenotes/algdata/lbld/%E7%AE%97%E6%B3%95%E5%B0%8F%E6%8A%84%E6%A0%B8%E5%BF%83%E5%A5%97%E8%B7%AF.html",{"d":"2023-01-26T06:20:30.000Z","c":["算法","数据结构"],"g":["算法","数据结构"],"u":false,"e":"<h2> 学习算法和刷题的框架思维</h2>\n<p>学习解决问题的<strong>思路、套路、框架</strong>，养成“框架思维”，<strong>不应该纠结于问题的细节</strong>，把握问题的共性和本质，做到举一反三。</p>\n<h3> 数据结构的存储方式</h3>\n<p>数据结构的底层存储方式只有两种：<code>数组（顺序存储）和链表（链式存储）</code>。</p>\n<p>其他的数据结构，比如哈希表、栈、队列、堆、树、图等都是属于具体的上层建筑，都是在数组或者链表上的特殊操作，只是<code>API</code>特性不同而已。</p>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">数组</p>\n<p>数组由于是紧凑连续存储，因此可以随机访问，通过索引快速找到对应的元素，而且相对节约存储空间。但正因为连续存储，内存空间必须一次性分配足，所以数组如果要扩容，需要先重新分配一块更大的空间，再把数据全部复制进去，时间复杂度为<code>O(N)</code>；而且如果想在数组中间和开始位置进行插入和删除操作，每次必须移动后面的所有数据以保持连续，时间复杂度为<code>O(N)</code>。</p>\n<p><strong>数组在开始、中间、最后位置的增删改查分析如下：</strong></p>\n<ul>\n<li>开始位置：增加和删除都需要挪动元素，所以效率不高，但是查询和修改就比较高效。</li>\n<li>中间位置：增加和删除都需要挪动元素，所以效率不高，但是查询和修改就比较高效。</li>\n<li>最后位置：增加和删除位置不需要挪动元素，效率比较高，同时查询和修改效率也比较高。</li>\n</ul>\n</div>","y":"a","title":"核心套路","i":"write"},["/codenotes/algdata/lbld/算法小抄核心套路.html","/codenotes/algdata/lbld/%E7%AE%97%E6%B3%95%E5%B0%8F%E6%8A%84%E6%A0%B8%E5%BF%83%E5%A5%97%E8%B7%AF","/codenotes/algdata/lbld/算法小抄核心套路.md","/codenotes/algdata/lbld/%E7%AE%97%E6%B3%95%E5%B0%8F%E6%8A%84%E6%A0%B8%E5%BF%83%E5%A5%97%E8%B7%AF.md"]],
  ["v-5b551ec1","/codenotes/algdata/lbld/%E7%AE%97%E6%B3%95%E5%B0%8F%E6%8A%84%E7%AE%97%E6%B3%95%E6%80%9D%E7%BB%B4.html",{"d":"2023-01-26T06:20:30.000Z","c":["算法","数据结构"],"g":["算法","数据结构"],"u":false,"y":"a","title":"算法思维","i":"write"},["/codenotes/algdata/lbld/算法小抄算法思维.html","/codenotes/algdata/lbld/%E7%AE%97%E6%B3%95%E5%B0%8F%E6%8A%84%E7%AE%97%E6%B3%95%E6%80%9D%E7%BB%B4","/codenotes/algdata/lbld/算法小抄算法思维.md","/codenotes/algdata/lbld/%E7%AE%97%E6%B3%95%E5%B0%8F%E6%8A%84%E7%AE%97%E6%B3%95%E6%80%9D%E7%BB%B4.md"]],
  ["v-eb3c33d0","/codenotes/algdata/lbld/%E7%AE%97%E6%B3%95%E5%B0%8F%E6%8A%84%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95.html",{"d":"2023-01-26T06:20:30.000Z","c":["算法","数据结构"],"g":["算法","数据结构"],"u":false,"e":"<h2> 如何高效寻找素数</h2>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">素数</p>\n<p>如果一个数只能被1和它本身整除，那么这个数就是素数。</p>\n</div>\n<p>实现一个函数，输入一个正整数<code>n</code>，函数返回区间<code>[2,n)</code>中素数的个数。</p>\n<p>函数签名如下：<code>int countPrimes(int n)</code></p>\n<h3> 一般实现</h3>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><pre class=\"language-java\"><code><span class=\"token doc-comment comment\">/***\n * @Description: [2, n)素数的个数\n * @Author: Mr.Tong\n */</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">countPrimes</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isPrime</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> count<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token doc-comment comment\">/***\n * @Description: 判断一个数是不是素数\n * @Author: Mr.Tong\n */</span>\n<span class=\"token keyword\">boolean</span> <span class=\"token function\">isPrime</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","title":"高频面试","i":"write"},["/codenotes/algdata/lbld/算法小抄高频面试.html","/codenotes/algdata/lbld/%E7%AE%97%E6%B3%95%E5%B0%8F%E6%8A%84%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95","/codenotes/algdata/lbld/算法小抄高频面试.md","/codenotes/algdata/lbld/%E7%AE%97%E6%B3%95%E5%B0%8F%E6%8A%84%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95.md"]],
  ["v-ba95c21c","/codenotes/framework/MicroServices/",{"y":"p","title":"微服务","i":"network"},["/codenotes/framework/MicroServices/index.html","/codenotes/framework/MicroServices/README.md"]],
  ["v-521eece2","/codenotes/framework/MicroServices/SpringCloud01.html",{"d":"2023-01-26T06:20:30.000Z","c":["SpringCloud","微服务"],"g":["序列化","参数调优","RPC框架"],"u":false,"e":"<h1> SpringCloud1</h1>\n<blockquote>\n<p>by九牧</p>\n</blockquote>\n<h1> 1. 认识微服务</h1>\n<p>随着互联网行业的发展，对服务的要求也越来越高，服务架构也从单体架构逐渐演变为现在流行的微服务架构。这些架构之间有怎样的差别呢？</p>\n<h2> 1.0 学习目标</h2>\n<p>了解微服务架构的优缺点</p>\n<h2> 1.1 服务架构演变</h2>\n<h3> 1.1.1 单体架构</h3>\n<p><strong>单体架构</strong>：将业务的所有功能集中在一个项目中开发，打成一个包部署。</p>\n<p><img src=\"https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/1273/image-20210713202807818.png\" alt=\"image-20210713202807818\"></p>","y":"a","title":"微服务1","i":"write"},["/codenotes/framework/MicroServices/SpringCloud01","/codenotes/framework/MicroServices/SpringCloud01.md"]],
  ["v-53d3c581","/codenotes/framework/MicroServices/SpringCloud02.html",{"d":"2023-01-26T06:20:30.000Z","c":["SpringCloud","微服务"],"g":["序列化","参数调优","RPC框架"],"u":false,"e":"<h1> SpringCloud02</h1>\n<blockquote>\n<p>by九牧</p>\n</blockquote>\n<h1> 0. 学习目标</h1>\n<h1> 1. Nacos配置管理</h1>\n<blockquote>\n<p><code>Nacos</code> 除了可以做注册中心，同样可以做配置管理来使用</p>\n</blockquote>\n<h2> 1.1 统一配置管理</h2>\n<blockquote>\n<p>当微服务部署的实例越来越多，达到数十、数百时，逐个修改微服务配置就会让人抓狂，而且很容易出错，所以我们需要一种统一配置管理方案，可以集中管理所有实例的配置</p>\n</blockquote>","y":"a","title":"微服务2","i":"write"},["/codenotes/framework/MicroServices/SpringCloud02","/codenotes/framework/MicroServices/SpringCloud02.md"]],
  ["v-b2a73dca","/codenotes/framework/MicroServices/%E8%AE%A4%E8%AF%86%E5%BE%AE%E6%9C%8D%E5%8A%A1.html",{"d":"2023-01-26T06:20:30.000Z","c":["SpringCloud","微服务"],"g":["序列化","参数调优","RPC框架"],"u":false,"y":"a","title":"微服务0","i":"write"},["/codenotes/framework/MicroServices/认识微服务.html","/codenotes/framework/MicroServices/%E8%AE%A4%E8%AF%86%E5%BE%AE%E6%9C%8D%E5%8A%A1","/codenotes/framework/MicroServices/认识微服务.md","/codenotes/framework/MicroServices/%E8%AE%A4%E8%AF%86%E5%BE%AE%E6%9C%8D%E5%8A%A1.md"]],
  ["v-4edd469a","/codenotes/framework/netty/Netty%E6%A0%B8%E5%BF%83.html",{"d":"2023-01-26T06:20:30.000Z","c":["Netty","网络编程"],"g":["服务器","客户端","组件","协议设计","粘包半包"],"u":false,"e":"<h2> 一、概述</h2>\n<h3> 1、什么是Netty</h3>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><pre class=\"language-java\"><code><span class=\"token class-name\">Netty</span> is an asynchronous event<span class=\"token operator\">-</span>driven network application framework <span class=\"token keyword\">for</span> rapid development of maintainable high performance protocol servers <span class=\"token operator\">&amp;</span> clients<span class=\"token punctuation\">.</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div>","y":"a","title":"Netty核心","i":"write"},["/codenotes/framework/netty/Netty核心.html","/codenotes/framework/netty/Netty%E6%A0%B8%E5%BF%83","/codenotes/framework/netty/Netty核心.md","/codenotes/framework/netty/Netty%E6%A0%B8%E5%BF%83.md"]],
  ["v-65c1d7f2","/codenotes/framework/netty/Netty%E9%AB%98%E7%BA%A7.html",{"d":"2023-01-26T06:20:30.000Z","c":["Netty","网络编程"],"g":["序列化","参数调优","RPC框架"],"u":false,"e":"<h2> 一、优化</h2>\n<h3> 1、扩展序列化算法</h3>\n<h4> 1、序列化接口</h4>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><pre class=\"language-java\"><code><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Serializer</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token doc-comment comment\">/**\n     * 序列化\n     *\n     * <span class=\"token keyword\">@param</span> <span class=\"token parameter\">object</span> 被序列化的对象\n     * <span class=\"token keyword\">@param</span> <span class=\"token class-name\"><span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">&gt;</span></span>    被序列化对象类型\n     * <span class=\"token keyword\">@return</span> 序列化后的字节数组\n     */</span>\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">T</span> object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token doc-comment comment\">/**\n     * 反序列化\n     *\n     * <span class=\"token keyword\">@param</span> <span class=\"token parameter\">clazz</span> 反序列化的目标类的Class对象\n     * <span class=\"token keyword\">@param</span> <span class=\"token parameter\">bytes</span> 被反序列化的字节数组\n     * <span class=\"token keyword\">@param</span> <span class=\"token class-name\"><span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">&gt;</span></span>   反序列化目标类\n     * <span class=\"token keyword\">@return</span> 反序列化后的对象\n     */</span>\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token class-name\">T</span> <span class=\"token function\">deserialize</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">&gt;</span></span> clazz<span class=\"token punctuation\">,</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> bytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","y":"a","title":"Netty高级","i":"write"},["/codenotes/framework/netty/Netty高级.html","/codenotes/framework/netty/Netty%E9%AB%98%E7%BA%A7","/codenotes/framework/netty/Netty高级.md","/codenotes/framework/netty/Netty%E9%AB%98%E7%BA%A7.md"]],
  ["v-2465339c","/codenotes/framework/netty/",{"y":"p","title":"Netty","i":"network"},["/codenotes/framework/netty/index.html","/codenotes/framework/netty/README.md"]],
  ["v-6fbc3189","/codenotes/framework/Spring_SpringBoot/Spring.html",{"d":"2023-01-26T06:20:30.000Z","y":"a","title":""},["/codenotes/framework/Spring_SpringBoot/Spring","/codenotes/framework/Spring&SpringBoot/Spring.html","/codenotes/framework/Spring&SpringBoot/Spring.md"]],
  ["v-3706649a","/404.html",{"y":"p","title":""},["/404"]],
  ["v-12854963","/codenotes/framework/Spring_SpringBoot/",{"y":"p","title":"Spring Spring Boot"},["/codenotes/framework/Spring_SpringBoot/index.html"]],
  ["v-5bc93818","/category/",{"y":"p","title":"分类"},["/category/index.html"]],
  ["v-744d024e","/tag/",{"y":"p","title":"标签"},["/tag/index.html"]],
  ["v-e52c881c","/article/",{"y":"p","title":"文章"},["/article/index.html"]],
  ["v-154dc4c4","/star/",{"y":"p","title":"收藏"},["/star/index.html"]],
  ["v-01560935","/timeline/",{"y":"p","title":"时间轴"},["/timeline/index.html"]],
  ["v-1eaeb558","/category/%E5%BF%AB%E9%80%9F%E5%AF%BC%E8%88%AA/",{"y":"p","title":"快速导航 分类"},["/category/快速导航/","/category/%E5%BF%AB%E9%80%9F%E5%AF%BC%E8%88%AA/index.html"]],
  ["v-48f9b645","/tag/%E4%BC%98%E8%B4%A8%E5%8D%9A%E5%AE%A2/",{"y":"p","title":"优质博客 标签"},["/tag/优质博客/","/tag/%E4%BC%98%E8%B4%A8%E5%8D%9A%E5%AE%A2/index.html"]],
  ["v-f18cc9a6","/category/%E5%AE%9E%E6%88%98%E9%A1%B9%E7%9B%AE/",{"y":"p","title":"实战项目 分类"},["/category/实战项目/","/category/%E5%AE%9E%E6%88%98%E9%A1%B9%E7%9B%AE/index.html"]],
  ["v-36f81cca","/tag/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E/",{"y":"p","title":"搜索引擎 标签"},["/tag/搜索引擎/","/tag/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E/index.html"]],
  ["v-0d7069e8","/category/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/",{"y":"p","title":"系统设计 分类"},["/category/系统设计/","/category/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/index.html"]],
  ["v-4b991ab7","/tag/%E5%AE%9E%E6%88%98%E9%A1%B9%E7%9B%AE/",{"y":"p","title":"实战项目 标签"},["/tag/实战项目/","/tag/%E5%AE%9E%E6%88%98%E9%A1%B9%E7%9B%AE/index.html"]],
  ["v-7281fe0a","/category/%E6%8A%80%E6%9C%AF%E6%95%99%E7%A8%8B/",{"y":"p","title":"技术教程 分类"},["/category/技术教程/","/category/%E6%8A%80%E6%9C%AF%E6%95%99%E7%A8%8B/index.html"]],
  ["v-84b16ad4","/tag/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/",{"y":"p","title":"系统设计 标签"},["/tag/系统设计/","/tag/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/index.html"]],
  ["v-3f7ac554","/category/%E5%B7%A5%E5%85%B7%E7%B1%BB%E5%BA%93/",{"y":"p","title":"工具类库 分类"},["/category/工具类库/","/category/%E5%B7%A5%E5%85%B7%E7%B1%BB%E5%BA%93/index.html"]],
  ["v-e9c2fef6","/tag/%E6%8A%80%E6%9C%AF%E6%95%99%E7%A8%8B/",{"y":"p","title":"技术教程 标签"},["/tag/技术教程/","/tag/%E6%8A%80%E6%9C%AF%E6%95%99%E7%A8%8B/index.html"]],
  ["v-d170eb22","/category/%E7%94%B5%E5%AD%90%E4%B9%A6/",{"y":"p","title":"电子书 分类"},["/category/电子书/","/category/%E7%94%B5%E5%AD%90%E4%B9%A6/index.html"]],
  ["v-b6bbc640","/tag/%E5%B7%A5%E5%85%B7%E7%B1%BB%E5%BA%93/",{"y":"p","title":"工具类库 标签"},["/tag/工具类库/","/tag/%E5%B7%A5%E5%85%B7%E7%B1%BB%E5%BA%93/index.html"]],
  ["v-65f56839","/category/sql/",{"y":"p","title":"SQL 分类"},["/category/sql/index.html"]],
  ["v-5e7287a5","/tag/%E7%94%B5%E5%AD%90%E4%B9%A6/",{"y":"p","title":"电子书 标签"},["/tag/电子书/","/tag/%E7%94%B5%E5%AD%90%E4%B9%A6/index.html"]],
  ["v-3d18412f","/category/go/",{"y":"p","title":"Go 分类"},["/category/go/index.html"]],
  ["v-b305b122","/tag/sql/",{"y":"p","title":"SQL 标签"},["/tag/sql/index.html"]],
  ["v-5831b135","/category/java/",{"y":"p","title":"Java 分类"},["/category/java/index.html"]],
  ["v-0da0c339","/tag/go/",{"y":"p","title":"Go 标签"},["/tag/go/index.html"]],
  ["v-42f2f156","/category/%E4%B9%A6%E7%B1%8D/",{"y":"p","title":"书籍 分类"},["/category/书籍/","/category/%E4%B9%A6%E7%B1%8D/index.html"]],
  ["v-28a1d8bf","/tag/java/",{"y":"p","title":"Java 标签"},["/tag/java/index.html"]],
  ["v-69731659","/category/%E5%BD%B1%E8%A7%86/",{"y":"p","title":"影视 分类"},["/category/影视/","/category/%E5%BD%B1%E8%A7%86/index.html"]],
  ["v-086db55f","/tag/%E4%B9%A6%E7%B1%8D/",{"y":"p","title":"书籍 标签"},["/tag/书籍/","/tag/%E4%B9%A6%E7%B1%8D/index.html"]],
  ["v-5995bc00","/category/%E9%9F%B3%E4%B9%90/",{"y":"p","title":"音乐 分类"},["/category/音乐/","/category/%E9%9F%B3%E4%B9%90/index.html"]],
  ["v-d94b773a","/tag/%E5%BD%B1%E8%A7%86/",{"y":"p","title":"影视 标签"},["/tag/影视/","/tag/%E5%BD%B1%E8%A7%86/index.html"]],
  ["v-06be9332","/category/%E7%AE%97%E6%B3%95/",{"y":"p","title":"算法 分类"},["/category/算法/","/category/%E7%AE%97%E6%B3%95/index.html"]],
  ["v-05c75fec","/tag/%E9%9F%B3%E4%B9%90/",{"y":"p","title":"音乐 标签"},["/tag/音乐/","/tag/%E9%9F%B3%E4%B9%90/index.html"]],
  ["v-4f178b9c","/category/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/",{"y":"p","title":"数据结构 分类"},["/category/数据结构/","/category/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/index.html"]],
  ["v-2687e471","/tag/%E7%AE%97%E6%B3%95/",{"y":"p","title":"算法 标签"},["/tag/算法/","/tag/%E7%AE%97%E6%B3%95/index.html"]],
  ["v-6fcf7e02","/category/springcloud/",{"y":"p","title":"SpringCloud 分类"},["/category/springcloud/index.html"]],
  ["v-13770b26","/tag/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/",{"y":"p","title":"数据结构 标签"},["/tag/数据结构/","/tag/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/index.html"]],
  ["v-5bd10ded","/category/%E5%BE%AE%E6%9C%8D%E5%8A%A1/",{"y":"p","title":"微服务 分类"},["/category/微服务/","/category/%E5%BE%AE%E6%9C%8D%E5%8A%A1/index.html"]],
  ["v-eccae7f6","/tag/%E5%BA%8F%E5%88%97%E5%8C%96/",{"y":"p","title":"序列化 标签"},["/tag/序列化/","/tag/%E5%BA%8F%E5%88%97%E5%8C%96/index.html"]],
  ["v-95e0c4b6","/category/netty/",{"y":"p","title":"Netty 分类"},["/category/netty/index.html"]],
  ["v-47b60b66","/tag/%E5%8F%82%E6%95%B0%E8%B0%83%E4%BC%98/",{"y":"p","title":"参数调优 标签"},["/tag/参数调优/","/tag/%E5%8F%82%E6%95%B0%E8%B0%83%E4%BC%98/index.html"]],
  ["v-676e81cc","/category/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/",{"y":"p","title":"网络编程 分类"},["/category/网络编程/","/category/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/index.html"]],
  ["v-9e1cafc4","/tag/rpc%E6%A1%86%E6%9E%B6/",{"y":"p","title":"RPC框架 标签"},["/tag/rpc框架/","/tag/rpc%E6%A1%86%E6%9E%B6/index.html"]],
  ["v-26aa7bf5","/tag/%E6%9C%8D%E5%8A%A1%E5%99%A8/",{"y":"p","title":"服务器 标签"},["/tag/服务器/","/tag/%E6%9C%8D%E5%8A%A1%E5%99%A8/index.html"]],
  ["v-f7d81b2a","/tag/%E5%AE%A2%E6%88%B7%E7%AB%AF/",{"y":"p","title":"客户端 标签"},["/tag/客户端/","/tag/%E5%AE%A2%E6%88%B7%E7%AB%AF/index.html"]],
  ["v-457b5cec","/tag/%E7%BB%84%E4%BB%B6/",{"y":"p","title":"组件 标签"},["/tag/组件/","/tag/%E7%BB%84%E4%BB%B6/index.html"]],
  ["v-10cff453","/tag/%E5%8D%8F%E8%AE%AE%E8%AE%BE%E8%AE%A1/",{"y":"p","title":"协议设计 标签"},["/tag/协议设计/","/tag/%E5%8D%8F%E8%AE%AE%E8%AE%BE%E8%AE%A1/index.html"]],
  ["v-a3a7272a","/tag/%E7%B2%98%E5%8C%85%E5%8D%8A%E5%8C%85/",{"y":"p","title":"粘包半包 标签"},["/tag/粘包半包/","/tag/%E7%B2%98%E5%8C%85%E5%8D%8A%E5%8C%85/index.html"]],
]
