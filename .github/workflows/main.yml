# name 可以自定义
name: 部署文档
# 触发条件：在 push 到 main/master 分支后，新的 Github 项目 应该都是 main，而之前的项目一般都是 master
on:
  push:
    branches:
      # 确保这是你正在使用的分支名称
      - main
# 任务
jobs:
  deploy-gh-pages:
    # 服务器环境：最新版 Ubuntu
    runs-on: ubuntu-latest
    steps:
      # 拉取代码
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          # 如果你文档需要 Git 子模块，取消注释下一行
          # submodules: true

      # 生成静态文件
      - name: Build
        run: npm install && npm run docs:build

      - name: 安装 pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7
          run_install: true


      - name: 设置 Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: pnpm

      # 部署文档
      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          # 这是文档部署到的分支名称
          branch: gh-pages
          with:
            # 也就是我们刚才生成的 secret
            ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
            # 部署到 gh-pages 分支，因为 main 分支存放的一般是源码，而 gh-pages 分支则用来存放生成的静态文件
            BRANCH: gh-pages
            # vuepress 生成的静态文件存放的地方
            FOLDER: docs/.vuepress/dist

